#BlueJ class context
comment0.params=
comment0.target=Caches()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Caches\n
comment1.params=caches
comment1.target=Caches(java.util.HashMap)
comment10.params=coordenadas
comment10.target=void\ remove(Coordenadas)
comment10.text=\n\ \ Remove\ cache\ apartir\ das\ suas\ coordenadas\n
comment11.params=c
comment11.target=boolean\ existe(Cache)
comment11.text=\n\ \ Verifica\ se\ a\ cache\ existe\n
comment12.params=c
comment12.target=boolean\ existe(Coordenadas)
comment13.params=
comment13.target=Caches\ clone()
comment14.params=obj
comment14.target=boolean\ equals(java.lang.Object)
comment15.params=
comment15.target=java.lang.String\ toString()
comment16.params=coord
comment16.target=Cache\ cacheMaisPerto(Coordenadas)
comment17.params=c
comment17.target=Cache\ getCache(Coordenadas)
comment2.params=c
comment2.target=Caches(Caches)
comment3.params=
comment3.target=java.util.HashMap\ getCaches()
comment4.params=caches
comment4.target=void\ setCaches(java.util.HashMap)
comment5.params=
comment5.target=int\ size()
comment6.params=
comment6.target=java.util.Iterator\ iterator()
comment7.params=c\ email\ time
comment7.target=void\ addRegisto(Coordenadas,\ java.lang.String,\ Timeline)
comment7.text=\n\ \ Adiciona\ um\ registo\ a\ uma\ cache\n
comment8.params=c
comment8.target=void\ add(Cache)
comment8.text=\n\ \ Adiciona\ uma\ cache\n
comment9.params=c
comment9.target=void\ remove(Cache)
comment9.text=\n\ \ Remove\ /\ Invalida\ uma\ cache\n
numComments=18
