#BlueJ class context
comment0.params=
comment0.target=Utilizadores()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Utilizadores\n
comment1.params=utilizadores
comment1.target=Utilizadores(java.util.HashMap)
comment10.params=u
comment10.target=boolean\ existe(Utilizador)
comment10.text=\n\ \ Verifica\ se\ existe\ o\ utilizador\n
comment11.params=email
comment11.target=boolean\ existe(java.lang.String)
comment12.params=
comment12.target=Utilizadores\ clone()
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment2.params=u
comment2.target=Utilizadores(Utilizadores)
comment3.params=
comment3.target=java.util.HashMap\ getUtilizadores()
comment4.params=utilizadores
comment4.target=void\ setUtilizadores(java.util.HashMap)
comment5.params=u
comment5.target=void\ add(Utilizador)
comment5.text=\n\ \ Adiciona\ um\ utilizador\n
comment6.params=email1\ email2
comment6.target=void\ addAmizade(java.lang.String,\ java.lang.String)
comment6.text=\n\ Adiciona\ como\ amigos\ os\ dois\ utilizadores,\ actualizando\ os\ respectivos\ perfis\ \n
comment7.params=email1\ email2
comment7.target=void\ removeAmizade(java.lang.String,\ java.lang.String)
comment7.text=\n\ Remove\ o\ estatuto\ de\ amigos\ em\ ambos\ os\ perfis\n
comment8.params=u
comment8.target=void\ remove(Utilizador)
comment8.text=\n\ \ Remove\ um\ utilizador\n
comment9.params=email
comment9.target=Utilizador\ get(java.lang.String)
numComments=14
