#BlueJ class context
comment0.params=
comment0.target=MultiCache()
comment1.params=livro_registos\ data\ hora\ coordenadas\ checkpoints\ geocoins
comment1.target=MultiCache(java.util.HashMap,\ Data,\ Hora,\ Coordenadas,\ java.util.ArrayList,\ int)
comment2.params=c
comment2.target=MultiCache(MultiCache)
comment3.params=
comment3.target=int\ getGeocoins()
comment4.params=
comment4.target=java.util.ArrayList\ getCheckpoints()
comment4.text=\n\ Se\ as\ coordenadas\ continuarem\ a\ ser\ strings\ isto\ ta\ errado(clone\ de\ string)\ \n\n
comment5.params=coins
comment5.target=void\ setGeocoins(int)
comment6.params=pontos
comment6.target=void\ setCheckpoints(java.util.ArrayList)
comment7.params=c
comment7.target=boolean\ checkMC(Coordenadas)
comment7.text=\n\ \ \ \ public\ Coordenadas\ nextPoint(Coordenadas\ c){\n\tint\ done\ \=\ 1;\t\n\tCoordendas\ r\ \=\ null;\n\t\n\tIterator\ blablaba\ \=\=\ ?????\ ??\ ?\n\n\twhile(it.hasNext()\ &&\ done)\ {\n\t\tCoordenadas\ elem\ \=\ it.next();\n\t\t\n\t\tif(done\=\=2)\ {r\ \=\ new\ Coordenadas(elem);\ done\ \=\ 0;}\t\t\n\t\t\n\t\tif(c.equals(elem))\ done\ \=\ 2;\n\t\t\t\n\t}\n\treturn\ r;\n\ \ \ \ }\n\ \ \ \ /*\n\tVerifica\ se\ as\ coordenadas\ dadas\ s\u00E3o\ as\ da\ cache\ final\n
comment8.params=
comment8.target=MultiCache\ clone()
comment9.params=obj
comment9.target=boolean\ equals(java.lang.Object)
numComments=10
